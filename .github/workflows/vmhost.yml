name: VM Host - Terraform an Azure VM

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to Deploy'
        type: environment
        required: true
      component:
        description: 'Component to Deploy'
        type: choice
        options:
          - 'tfstore'
          - 'network'
          - 'vmhost'
      action:
        description: 'Terraform Action to Perform'
        type: choice
        options:
          - 'plan'
          - 'apply'
          - 'destroy'

run-name: ${{ github.event.inputs.environment }} - Terraform ${{ github.event.inputs.component }} ${{ github.event.inputs.action }}

jobs:

  terraform-infra:

    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    env:
      ENV_NAME: ${{ github.event.inputs.environment }}
      INFRA_NAME: ${{ vars.INFRA_NAME }}
      VM_NAME: ${{ vars.VM_NAME }}
      VM_SIZE: ${{ vars.VM_SIZE }}
      COMPONENT: ${{ github.event.inputs.component }}
      TERRAFORM_ACTION: ${{ github.event.inputs.action }}
      ARM_TENANT_ID: ${{ vars.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ vars.ARM_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ vars.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_ACCESS_KEY: ${{ secrets.ARM_TFSTATE_ACCESSKEY }}
      TFSTATE_SUFFIX: ${{ vars.TFSTATE_SUFFIX }}
      LOCATION: ${{ vars.LOCATION }}
      CIDR_BLOCK: ${{ vars.CIDR_BLOCK }}
      SSH_PUBKEY1: ${{ vars.SSH_PUBKEY1 }}
      SSH_SRC1: ${{ vars.SSH_SRC1 }}

    steps:

      - name: Check Environment
        run: |
          echo "ENV_NAME: ${ENV_NAME}"
          echo "TERRAFORM_ACTION: ${TERRAFORM_ACTION}"
          echo "VM Name/Size: ${VM_NAME}/${VM_SIZE}"
          echo "SSH_SRC1: ${SSH_SRC}"
          echo "COMPONENT: $COMPONENT"
          echo "ARM_TENANT_ID: $ARM_TENANT_ID"
          echo "ARM_SUBSCRIPTION_ID: $ARM_SUBSCRIPTION_ID"
          echo "ARM_CLIENT_ID: $ARM_CLIENT_ID"
          echo "ARM_CLIENT_SECRET: $ARM_CLIENT_SECRET"
          echo "TFSTATE_SUFFIX: ${TFSTATE_SUFFIX}"
          echo "LOCATION: ${LOCATION}"
          echo "CIDR_BLOCK: $CIDR_BLOCK"

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Terraform Action
        env:
          ARM_SKIP_PROVIDER_REGISTRATION: true
        run: |
          cd azure
          echo "ENV_NAME: ${ENV_NAME}"
          ./terraform_runner.sh azure $COMPONENT $TERRAFORM_ACTION
